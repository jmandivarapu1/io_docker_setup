<T> T lineMagic(String name, java.util.List<String> args) {
    io.github.spencerpark.ijava.JavaKernel kernel = io.github.spencerpark.ijava.IJava.getKernelInstance();

    if (kernel != null) {
        try {
            return kernel.getMagics().applyLineMagic(name, args);
        } catch (io.github.spencerpark.jupyter.kernel.magic.registry.UndefinedMagicException e) {
            throw e;
        } catch (Exception e) {
            throw new RuntimeException(String.format("Exception occurred while running line magic '%s': %s", name, e.getMessage()), e);
        }
    } else {
        throw new RuntimeException("No IJava kernel running");
    }
}

<T> T cellMagic(String name, java.util.List<String> args, String body) {
    io.github.spencerpark.ijava.JavaKernel kernel = io.github.spencerpark.ijava.IJava.getKernelInstance();

    if (kernel != null) {
        try {
            return kernel.getMagics().applyCellMagic(name, args, body);
        } catch (io.github.spencerpark.jupyter.kernel.magic.registry.UndefinedMagicException e) {
            throw e;
        } catch (Exception e) {
            throw new RuntimeException(String.format("Exception occurred while running cell magic '%s': %s", name, e.getMessage()), e);
        }
    } else {
        throw new RuntimeException("No IJava kernel running");
    }
}